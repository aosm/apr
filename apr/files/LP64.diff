--- include/apr.h.in.orig	2006-03-31 16:16:43.000000000 -0800
+++ include/apr.h.in	2006-03-31 16:55:26.000000000 -0800
@@ -262,22 +262,40 @@
 typedef  @int_value@             apr_int32_t;
 typedef  unsigned @int_value@    apr_uint32_t;
                                                
-typedef  @long_value@            apr_int64_t;
-typedef  unsigned @long_value@   apr_uint64_t;
+#ifdef __LP64__
+typedef  long            apr_int64_t;
+typedef  unsigned long   apr_uint64_t;
+#else
+typedef  long long            apr_int64_t;
+typedef  unsigned long long   apr_uint64_t;
+#endif
 
 typedef  @size_t_value@          apr_size_t;
 typedef  @ssize_t_value@         apr_ssize_t;
 typedef  @off_t_value@           apr_off_t;
 typedef  @socklen_t_value@       apr_socklen_t;
 
-#define APR_SIZEOF_VOIDP @voidp_size@
+#ifdef __LP64__
+#define APR_SIZEOF_VOIDP 8
+#else
+#define APR_SIZEOF_VOIDP 4
+#endif
 
 /* Are we big endian? */
-#define APR_IS_BIGENDIAN	@bigendian@
+#ifdef __BIG_ENDIAN__
+#define APR_IS_BIGENDIAN	1
+#else
+#define APR_IS_BIGENDIAN	0
+#endif
 
 /* Mechanisms to properly type numeric literals */
-@int64_literal@
-@uint64_literal@
+#ifdef __LP64__
+#define APR_INT64_C(val) (val##L)
+#define APR_UINT64_C(val) (val##UL)
+#else
+#define APR_INT64_C(val) (val##LL)
+#define APR_UINT64_C(val) (val##ULL)
+#endif
 
 /* Definitions that APR programs need to work properly. */
 
@@ -350,19 +368,31 @@
 @size_t_fmt@
 
 /* And APR_OFF_T_FMT */
-@off_t_fmt@
+#define APR_OFF_T_FMT APR_INT64_T_FMT
 
 /* And APR_PID_T_FMT */
 @pid_t_fmt@
 
 /* And APR_INT64_T_FMT */
-@int64_t_fmt@
+#ifdef __LP64__
+#define APR_INT64_T_FMT "ld"
+#else
+#define APR_INT64_T_FMT "lld"
+#endif
 
 /* And APR_UINT64_T_FMT */
-@uint64_t_fmt@
+#ifdef __LP64__
+#define APR_UINT64_T_FMT "lu"
+#else
+#define APR_UINT64_T_FMT "llu"
+#endif
 
 /* And APR_UINT64_T_HEX_FMT */
-@uint64_t_hex_fmt@
+#ifdef __LP64__
+#define APR_UINT64_T_HEX_FMT "lx"
+#else
+#define APR_UINT64_T_HEX_FMT "llx"
+#endif
 
 /* Does the proc mutex lock threads too */
 #define APR_PROC_MUTEX_IS_GLOBAL      @proc_mutex_is_global@
--- include/arch/unix/apr_private.h.in.orig	2006-03-31 16:40:42.000000000 -0800
+++ include/arch/unix/apr_private.h.in	2006-03-31 16:56:32.000000000 -0800
@@ -2,10 +2,14 @@
 
 /* Define as function which can be used for conversion of strings to
    apr_int64_t */
-#undef APR_INT64_STRFN
+#ifdef __LP64__
+#define APR_INT64_STRFN strtol
+#else
+#define APR_INT64_STRFN strtoll
+#endif
 
 /* Define as function used for conversion of strings to apr_off_t */
-#undef APR_OFF_T_STRFN
+#define APR_OFF_T_STRFN APR_INT64_STRFN
 
 /* Define to path of random device */
 #undef DEV_RANDOM
@@ -624,7 +628,11 @@
 #undef READDIR_IS_THREAD_SAFE
 
 /* Define to 1 if the `setpgrp' function takes no argument. */
-#undef SETPGRP_VOID
+#ifdef __DARWIN_UNIX03
+#define SETPGRP_VOID 1
+#else
+/* #undef SETPGRP_VOID */
+#endif
 
 /* */
 #undef SIGWAIT_TAKES_ONE_ARG
@@ -636,7 +644,11 @@
 #undef SIZEOF_INT
 
 /* The size of a `long', as computed by sizeof. */
-#undef SIZEOF_LONG
+#ifdef __LP64__
+#define SIZEOF_LONG 8
+#else
+#define SIZEOF_LONG 4
+#endif
 
 /* The size of a `long long', as computed by sizeof. */
 #undef SIZEOF_LONG_LONG
@@ -651,13 +663,25 @@
 #undef SIZEOF_SHORT
 
 /* The size of size_t */
-#undef SIZEOF_SIZE_T
+#ifdef __LP64__
+#define SIZEOF_SIZE_T 8
+#else
+#define SIZEOF_SIZE_T 4
+#endif
 
 /* The size of ssize_t */
-#undef SIZEOF_SSIZE_T
+#ifdef __LP64__
+#define SIZEOF_SSIZE_T 8
+#else
+#define SIZEOF_SSIZE_T 4
+#endif
 
 /* The size of a `void*', as computed by sizeof. */
-#undef SIZEOF_VOIDP
+#ifdef __LP64__
+#define SIZEOF_VOIDP 8
+#else
+#define SIZEOF_VOIDP 4
+#endif
 
 /* Define to 1 if you have the ANSI C header files. */
 #undef STDC_HEADERS
@@ -678,7 +702,7 @@
 #undef USE_FLOCK_SERIALIZE
 
 /* Define if use of generic atomics is requested */
-#undef USE_GENERIC_ATOMICS
+/* #undef USE_GENERIC_ATOMICS */
 
 /* Define if BeOS areas will be used */
 #undef USE_SHMEM_BEOS
@@ -718,7 +742,11 @@
 
 /* Define to 1 if your processor stores words with the most significant byte
    first (like Motorola and SPARC, unlike Intel and VAX). */
-#undef WORDS_BIGENDIAN
+#ifdef __BIG_ENDIAN__
+#define WORDS_BIGENDIAN 1
+#else
+/* #undef WORDS_BIGENDIAN */
+#endif
 
 /* Define to 1 if on AIX 3.
    System headers sometimes define this.
--- configure.orig	2006-05-05 13:36:35.000000000 -0700
+++ configure	2006-05-05 13:57:34.000000000 -0700
@@ -24965,7 +24965,6 @@
 if test $force_generic_atomics = yes; then
 
 cat >>confdefs.h <<\_ACEOF
-#define USE_GENERIC_ATOMICS 1
 _ACEOF
 
 fi
@@ -30532,7 +30531,6 @@
 echo "$as_me:$LINENO: result: $ac_cv_sizeof_voidp" >&5
 echo "${ECHO_T}$ac_cv_sizeof_voidp" >&6
 cat >>confdefs.h <<_ACEOF
-#define SIZEOF_VOIDP $ac_cv_sizeof_voidp
 _ACEOF
 
 
@@ -33182,7 +33180,6 @@
 if test $ac_cv_func_setpgrp_void = yes; then
 
 cat >>confdefs.h <<\_ACEOF
-#define SETPGRP_VOID 1
 _ACEOF
 
 fi
@@ -33677,7 +33674,6 @@
 echo "$as_me:$LINENO: result: $ac_cv_sizeof_voidp" >&5
 echo "${ECHO_T}$ac_cv_sizeof_voidp" >&6
 cat >>confdefs.h <<_ACEOF
-#define SIZEOF_VOIDP $ac_cv_sizeof_voidp
 _ACEOF
 
 
@@ -34928,7 +34924,6 @@
 echo "$as_me:$LINENO: result: $ac_cv_sizeof_long" >&5
 echo "${ECHO_T}$ac_cv_sizeof_long" >&6
 cat >>confdefs.h <<_ACEOF
-#define SIZEOF_LONG $ac_cv_sizeof_long
 _ACEOF
 
 
@@ -35956,7 +35951,6 @@
 echo "${ECHO_T}$ac_cv_sizeof_ssize_t" >&6
 
 cat >>confdefs.h <<_ACEOF
-#define SIZEOF_SSIZE_T $ac_cv_sizeof_ssize_t
 _ACEOF
 
 
@@ -36020,7 +36014,6 @@
 echo "${ECHO_T}$ac_cv_sizeof_size_t" >&6
 
 cat >>confdefs.h <<_ACEOF
-#define SIZEOF_SIZE_T $ac_cv_sizeof_size_t
 _ACEOF
 
 
@@ -36529,7 +36522,6 @@
   yes)
 
 cat >>confdefs.h <<\_ACEOF
-#define WORDS_BIGENDIAN 1
 _ACEOF
  ;;
   no)
@@ -37530,7 +37522,6 @@
 if test "$have_int64_strfn" = "1"; then
 
 cat >>confdefs.h <<_ACEOF
-#define APR_INT64_STRFN $int64_strfn
 _ACEOF
 
 fi
@@ -37548,7 +37539,6 @@
 fi
 
 cat >>confdefs.h <<_ACEOF
-#define APR_OFF_T_STRFN $off_t_strfn
 _ACEOF
 
 
